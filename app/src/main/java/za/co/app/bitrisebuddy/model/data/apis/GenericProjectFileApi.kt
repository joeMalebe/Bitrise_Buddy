/**
 * NOTE: This class is auto generated by the Swagger Gradle Codegen for the following API: Bitrise API
 *
 * More info on this tool is available on https://github.com/Yelp/swagger-gradle-codegen
 */

package za.co.app.bitrisebuddy.model.data.apis

import retrofit2.http.DELETE
import retrofit2.http.GET
import retrofit2.http.Headers
import retrofit2.http.PATCH
import retrofit2.http.POST
import za.co.app.bitrisebuddy.model.data.models.V0ProjectFileStorageDocumentUpdateParams
import za.co.app.bitrisebuddy.model.data.models.V0ProjectFileStorageListResponseModel
import za.co.app.bitrisebuddy.model.data.models.V0ProjectFileStorageResponseModel
import za.co.app.bitrisebuddy.model.data.models.V0ProjectFileStorageUploadParams

@JvmSuppressWildcards
interface GenericProjectFileApi {
    /**
     * Confirm a generic project file upload
     * This is the last step of uploading a generic project file to Bitrise. Confirm the generic project file upload and view the file on the Code Signing tab of a specific app. Read more in our [Confirming the upload](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#confirming-the-file-upload) guide.
     * The endpoint is owned by defaultname service owner
     * @param appSlug App slug (required)
     * @param genericProjectFileSlug Generic project file slug (required)
     */
    @Headers(
        "X-Operation-ID: generic-project-file-confirm",
      "Content-Type: application/json"
    )
    @POST("apps/{app-slug}/generic-project-files/{generic-project-file-slug}/uploaded")
    suspend fun genericProjectFileConfirm(
        @retrofit2.http.Path("app-slug") appSlug: String,
        @retrofit2.http.Path("generic-project-file-slug") genericProjectFileSlug: String
    ): V0ProjectFileStorageResponseModel
    /**
     * Delete a generic project file
     * Delete an app's generic project file. You can fetch an app's generic project file slug if you first list all the uploaded files with the [GET /apps/{app-slug}/generic-project-files](https://api-docs.bitrise.io/#/generic-project-file/generic-project-file-list) endpoint. Read more in our [Deleting a file](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#deleting-a-file) guide.
     * The endpoint is owned by defaultname service owner
     * @param appSlug App slug (required)
     * @param genericProjectFileSlug Generic project file slug (required)
     */
    @Headers(
        "X-Operation-ID: generic-project-file-delete"
    )
    @DELETE("apps/{app-slug}/generic-project-files/{generic-project-file-slug}")
    suspend fun genericProjectFileDelete(
        @retrofit2.http.Path("app-slug") appSlug: String,
        @retrofit2.http.Path("generic-project-file-slug") genericProjectFileSlug: String
    ): V0ProjectFileStorageResponseModel
    /**
     * Get a list of the generic project files
     * List all the generic project files that have been uploaded to a specific app. Read more in our [Listing the uploaded files of an app](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#listing-the-uploaded-files-of-an-app) guide.
     * The endpoint is owned by defaultname service owner
     * @param appSlug App slug (required)
     * @param next Slug of the first generic project file in the response (optional)
     * @param limit Max number of build certificates per page is 50. (optional)
     */
    @Headers(
        "X-Operation-ID: generic-project-file-list"
    )
    @GET("apps/{app-slug}/generic-project-files")
    suspend fun genericProjectFileList(
        @retrofit2.http.Path("app-slug") appSlug: String,
        @retrofit2.http.Query("next") next: String?,
        @retrofit2.http.Query("limit") limit: Int?
    ): V0ProjectFileStorageListResponseModel
    /**
     * Get a specific generic project file
     * Retrieve data of a specific generic project file to check its attributes and optionally modify them with the [PATCH /apps/](https://api-docs.bitrise.io/#/generic-project-file/generic-project-file-update) endpoint. Read more in our [Retrieving a specific file's data](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#retrieving-a-specific-files-data) guide.
     * The endpoint is owned by defaultname service owner
     * @param appSlug App slug (required)
     * @param genericProjectFileSlug Generic project file slug (required)
     */
    @Headers(
        "X-Operation-ID: generic-project-file-show"
    )
    @GET("apps/{app-slug}/generic-project-files/{generic-project-file-slug}")
    suspend fun genericProjectFileShow(
        @retrofit2.http.Path("app-slug") appSlug: String,
        @retrofit2.http.Path("generic-project-file-slug") genericProjectFileSlug: String
    ): V0ProjectFileStorageResponseModel
    /**
     * Update a generic project file
     * Update a generic project file's attributes. You can fetch an app's generic project file slug if you first list all the uploaded files with the [GET /apps/{app-slug}/generic-project-files](https://api-docs.bitrise.io/#/generic-project-file/generic-project-file-list) endpoint. Read more in our [Updating an uploaded file](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#updating-an-uploaded-file) guide.
     * The endpoint is owned by defaultname service owner
     * @param appSlug App slug (required)
     * @param genericProjectFileSlug Generic project file slug (required)
     * @param genericProjectFile Generic project file parameters (required)
     */
    @Headers(
        "X-Operation-ID: generic-project-file-update",
      "Content-Type: application/json"
    )
    @PATCH("apps/{app-slug}/generic-project-files/{generic-project-file-slug}")
    suspend fun genericProjectFileUpdate(
        @retrofit2.http.Path("app-slug") appSlug: String,
        @retrofit2.http.Path("generic-project-file-slug") genericProjectFileSlug: String,
        @retrofit2.http.Body genericProjectFile: V0ProjectFileStorageDocumentUpdateParams
    ): V0ProjectFileStorageResponseModel
    /**
     * Create a generic project file
     * Create a temporary pre-signed upload URL (expires in 10 minutes) for the generic project file and upload it to AWS with a simple `curl` request. To complete the uploading process and view your files on the Code Signing tab of your app, continue with the [POST /apps/{app-slug}/generic-project-files/{generic-project-file-slug}/uploaded](https://api-docs.bitrise.io/#/generic-project-file/generic-project-file-confirm) endpoint. Read more in our [Creating and uploading files to Generic File Storage](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#creating-and-uploading-files-to-generic-file-storage) guide.
     * The endpoint is owned by defaultname service owner
     * @param appSlug App slug (required)
     * @param genericProjectFile Generic project file parameters (required)
     */
    @Headers(
        "X-Operation-ID: generic-project-files-create",
      "Content-Type: application/json"
    )
    @POST("apps/{app-slug}/generic-project-files")
    suspend fun genericProjectFilesCreate(
        @retrofit2.http.Path("app-slug") appSlug: String,
        @retrofit2.http.Body genericProjectFile: V0ProjectFileStorageUploadParams
    ): V0ProjectFileStorageResponseModel
}
