/**
 * NOTE: This class is auto generated by the Swagger Gradle Codegen for the following API: Bitrise API
 *
 * More info on this tool is available on https://github.com/Yelp/swagger-gradle-codegen
 */

package za.co.app.bitrisebuddy.model.data.apis

import retrofit2.Response
import retrofit2.http.GET
import retrofit2.http.Header
import retrofit2.http.Headers
import za.co.app.bitrisebuddy.model.data.models.V0AppListResponseModel
import za.co.app.bitrisebuddy.model.data.models.V0AppShowResponseModel
import za.co.app.bitrisebuddy.model.data.models.V0BranchListResponseModel

@JvmSuppressWildcards
interface ApplicationApi {
    /**
     * Get bitrise.yml of a specific app
     * Get the full `bitrise.yml` configuration of an application, by providing the app slug. It returns the current `bitrise.yml` that is stored on bitrise.io in full, including the trigger map, the different workflows and the Steps.
     * The endpoint is owned by defaultname service owner
     * @param appSlug App slug (required)
     */
    @Headers(
        "X-Operation-ID: app-config-datastore-show"
    )
    @GET("apps/{app-slug}/bitrise.yml")
    suspend fun appConfigDatastoreShow(
        @retrofit2.http.Path("app-slug") appSlug: String
    ): String
    /**
     * Get list of the apps
     * List all the apps available for the authenticated account, including those that are owned by other users or Organizations.
     * The endpoint is owned by defaultname service owner
     * @param sortBy Order of the applications: sort them based on when they were created or the time of their last build (optional)
     * @param next Slug of the first app in the response (optional)
     * @param limit Max number of elements per page (default: 50) (optional)
     */
    @Headers(
        "X-Operation-ID: app-list"
    )
    @GET("apps")
    suspend fun appList(
        @retrofit2.http.Query("sort_by") sortBy: String?,
        @retrofit2.http.Query("next") next: String?,
        @retrofit2.http.Query("limit") limit: Int?,
        @Header("Authorization") accessToken : String
    ): Response<V0AppListResponseModel>
    /**
     * Get list of the apps for an organization
     * List all the available apps owned by a given organization. [Find the organization URL](https://devcenter.bitrise.io/team-management/organizations/org-url/) of the organisations you are part of; be aware that the endpoint will not return any apps if the authenticated account is not a member of the given organisation.
     * The endpoint is owned by defaultname service owner
     * @param orgSlug Organization slug (required)
     * @param sortBy Order of applications: sort them based on when they were created or the time of their last build (optional)
     * @param next Slug of the first app in the response (optional)
     * @param limit Max number of elements per page (default: 50) (optional)
     */
    @Headers(
        "X-Operation-ID: app-list-by-organization",
      "Content-Type: application/json"
    )
    @GET("organizations/{org-slug}/apps")
    suspend fun appListByOrganization(
        @retrofit2.http.Path("org-slug") orgSlug: String,
        @retrofit2.http.Query("sort_by") sortBy: String?,
        @retrofit2.http.Query("next") next: String?,
        @retrofit2.http.Query("limit") limit: Int?
    ): V0AppListResponseModel
    /**
     * Get list of the apps for a user
     * List all the available apps for the given user.  It needs the user slug that you can get from the [GET /me](https://api-docs.bitrise.io/#/user/user-profile) endpoint.
     * The endpoint is owned by defaultname service owner
     * @param userSlug User slug (required)
     * @param sortBy Order of applications (optional)
     * @param next Slug of the first app in the response (optional)
     * @param limit Max number of elements per page (default: 50) (optional)
     */
    @Headers(
        "X-Operation-ID: app-list-by-user"
    )
    @GET("users/{user-slug}/apps")
    suspend fun appListByUser(
        @retrofit2.http.Path("user-slug") userSlug: String,
        @retrofit2.http.Query("sort_by") sortBy: String?,
        @retrofit2.http.Query("next") next: String?,
        @retrofit2.http.Query("limit") limit: Int?
    ): V0AppListResponseModel
    /**
     * Get a specific app
     * Get the details of a specific app by providing the app slug. You can get the app slug by calling the [/apps](https://api-docs.bitrise.io/#/application/app-list) endpoint or by opening the app on bitrise.io and copying the slug from the URL.
     * The endpoint is owned by defaultname service owner
     * @param appSlug App slug (required)
     */
    @Headers(
        "X-Operation-ID: app-show"
    )
    @GET("apps/{app-slug}")
    suspend fun appShow(
        @retrofit2.http.Path("app-slug") appSlug: String
    ): V0AppShowResponseModel
    /**
     * List the branches with existing builds of an app's repository
     * Lists only those branches of a specified Bitrise app that have existing builds.
     * The endpoint is owned by defaultname service owner
     * @param appSlug App slug (required)
     */
    @Headers(
        "X-Operation-ID: branch-list"
    )
    @GET("apps/{app-slug}/branches")
    suspend fun branchList(
        @retrofit2.http.Path("app-slug") appSlug: String
    ): V0BranchListResponseModel
}
